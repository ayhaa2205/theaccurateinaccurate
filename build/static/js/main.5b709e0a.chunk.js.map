{"version":3,"sources":["components/Image.jsx","components/Video.jsx","components/Carousel.jsx","App.js","index.js"],"names":["Image","src","align","className","Video","location","controls","big","intro","frameborder","allow","allowFullScreen","autoPlay","muted","playsInline","loop","Carousel","content","useState","currentSlideIndex","setCurrentSlideIndex","contentArray","map","contentItem","slideType","onClick","length","slideDescription","layout","require","App","currentScrollIndex","setCurrentScrollIndex","getContentItemElement","contentType","source","split","word","startsWith","section","substring","indexOf","wordParsed","replace","join","spy","smooth","duration","to","bp","sections","index","name","onSetActive","parseInt","hashSpy","activeClass","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b709e0a.chunk.js","sourcesContent":["import React from 'react';\nimport './Image.css';\n\nconst Image = ({src, align}) => {\n    return (\n        <img className={`image ${align}`} src={src}/>\n    );\n};\n\nexport default Image;\n","import React from 'react';\nimport \"./Video.css\";\n\nconst Video = ({src, controls, location, big, align, intro}) => {\n    return (\n        <>\n            {location === \"external\" ?\n                <iframe src={src} className={\"iframe-video\"} frameborder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe> :\n                <video src={`videos/${src}`} className={`video ${big?'big':''} ${align}`} autoPlay muted playsInline loop>\n                </video>\n\n            }\n        </>\n    )\n        ;\n};\n\nexport default Video;\n","import React, {useState} from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel as ResponsiveCarousel} from 'react-responsive-carousel';\nimport \"./Carousel.css\";\nimport Image from \"./Image\";\nimport Video from \"./Video\";\n\nconst Carousel = ({content, align}) => {\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\n\n    const renderContent = () => {\n        return content.map(contentItem => {\n            if (contentItem.slideType === \"image\") return <Image align={align} src={`images/${contentItem.content}`}/>;\n            if (contentItem.slideType === \"video\") return <Video align={align} controls={true} location={contentItem.location} src={`${contentItem.content}`}/>\n            ;\n        });\n    };\n    let contentArray=renderContent();\n\n    const increaseSlideIndex=()=>{\n        if(currentSlideIndex===content.length-1){\n            setCurrentSlideIndex(0);\n        }else{\n            setCurrentSlideIndex(currentSlideIndex+1);\n        }\n    };\n    return (\n        <div className={\"carousel\"}>\n\n            <div className={\"carousel__slider\"}>\n                {contentArray[currentSlideIndex]}\n                <button className={\"carousel__button\"} onClick={increaseSlideIndex}></button>\n            </div>\n\n            <div className={`carousel__info carousel__info--${align}`}>\n                <div className={\"carousel-info__count\"}>{currentSlideIndex + 1}/{content.length}</div>\n                <div>{content[currentSlideIndex].slideDescription}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Carousel;\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport \"blueprint-css/dist/blueprint.min.css\";\nimport Carousel from \"./components/Carousel\";\nimport {Link, Element, Events, animateScroll} from 'react-scroll';\nimport Image from \"./components/Image\";\nimport Video from \"./components/Video\";\nimport ReactMarkdown from 'react-markdown';\n\n\n\nconst layout = require(\"./layout.json\");\n\nfunction App() {\n    let [currentScrollIndex, setCurrentScrollIndex] = useState(1);\n\n    const tableOfContentParser=toc=>{\n     let tocArray=toc.split(\" \");\n     return tocArray.map(word=>{\n         if(word.startsWith(\"#\")){\n             let section = word.substring(word.indexOf('[')+1, word.indexOf(']'));\n             let removedLinkWord=word.replace(/\\[.*?\\]/, \"\");\n             let wordParsed =removedLinkWord.split(\"-\").join(\" \");\n             return <Link className={\"chapter-link\"}\n                          spy={true} smooth={true}\n                          duration={800}\n                          onClick={() => setCurrentScrollIndex(section)}\n                          to={section}>{wordParsed} </Link>;\n         }\n         if(word===\"\\n\"){\n             return <br/>;\n         }\n         return word+\" \";\n     });\n    };\n\n    const getContentItemElement = ({contentType, content, location=\"internal\"}, align) => {\n        switch (contentType) {\n            case \"text\":\n                return <div className={\"text\"}><ReactMarkdown source={content}/></div>;\n            case \"toc\":\n                return <div className={\"text centered\"}>{tableOfContentParser(content)}</div>;\n            case \"carousel\":\n                return <Carousel content={content} align={align}/>;\n            case \"image\":\n                return <Image src={`images/${content}`}></Image>;\n            case \"video\":\n                return <Video big={true} location={location} src={content}></Video>;\n            case \"intro\":\n                return <Link\n                    className={\"intro__button\"} to={`section-1`}\n                    spy={true} smooth={true}\n                    duration={800} onClick={() => setCurrentScrollIndex( 1)}\n                   >\n                    <Video intro={true} big={true} location={location} src={content}></Video></Link>;\n\n        }\n    };\n\n    const renderLayout = () => {\n        return layout.sections.map((section, index) => {\n            if(section.length===3){\n                return <div name={`section-${index}`} bp={\"grid\"} className={\"section\"}>\n                    <div className={\"center\"} bp={\"4@md 12@sm\"}>{getContentItemElement(section[0], \"left\")}</div>\n                    <div className={\"center centertext\"} bp={\"4@md 12@sm\"}>{getContentItemElement(section[1], \"center\")}</div>\n                    <div className={\"center\"} bp={\"4@md 12@sm\"}>{getContentItemElement(section[2], \"right\")}</div>\n                    <Link className=\"hidden\"\n                          onSetActive={section => setCurrentScrollIndex(parseInt(section.split(\"-\")[1]))}\n                          to={`section-${index}`} spy={true} hashSpy={true}/>\n                </div>;\n            }\n            if (section.length === 2) {\n                return <div name={`section-${index}`} bp={\"grid\"} className={\"section\"}>\n                    <Link className=\"hidden\"\n                          onSetActive={section => setCurrentScrollIndex(parseInt(section.split(\"-\")[1]))}\n                          to={`section-${index}`} spy={true} hashSpy={true}/>\n                    <div className={\"center padright\"} bp={\"6@md 12@sm\"}>{getContentItemElement(section[0], \"left\")}</div>\n                    <div className={\"center padleft\"} bp={\"6@md 12@sm\"}>{getContentItemElement(section[1], \"right\")}</div>\n\n                </div>;\n            } else {\n                return <div name={`section-${index}`} bp={\"grid\"} className={\"section\"}>\n                    <Link className=\"hidden\"\n                          onSetActive={section => setCurrentScrollIndex(parseInt(section.split(\"-\")[1]))}\n                          to={`section-${index}`} spy={true} hashSpy={true}/>\n                    <div className={\"center\"} bp={\"12\"}>{getContentItemElement(section[0], \"center\")}</div>\n\n                </div>;\n            }\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <div className={\"logo\"} bp={\"grid\"}>\n                <div bp={12}>\n                <Link  to={`section-0`}\n                                           spy={true} smooth={true}\n                                           duration={800} onClick={() => setCurrentScrollIndex(0)}>\n                THE ACCURATE INACCURATE\n            </Link></div>\n            </div>\n\n            {renderLayout()}\n            <div bp={'grid'}\n                     className={\"navigation\"}>\n                {currentScrollIndex === 0 ? <div bp={'6 text-left'}></div> :\n                    <Link bp={'6 text-left'} activeClass=\"active\" class={\"navigation__button\"} to={`section-${currentScrollIndex - 1}`}\n                          spy={true} smooth={true}\n                          duration={800} onClick={() => setCurrentScrollIndex(currentScrollIndex - 1)}>\n                        Previous\n                    </Link>}\n                {currentScrollIndex === layout.sections.length - 1 ? <div bp={'6 text-left'}></div> :\n                    <Link bp={'6 text-right'} activeClass=\"active\" class={\"navigation__button\"} to={`section-${currentScrollIndex + 1}`}\n                          spy={true} smooth={true}\n                          duration={800} onClick={() => setCurrentScrollIndex(currentScrollIndex + 1)}>\n                        Next\n                    </Link>}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}