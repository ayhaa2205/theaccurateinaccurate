{"version":3,"sources":["components/Image.jsx","components/Video.jsx","components/Carousel.jsx","App.js","index.js"],"names":["Image","src","className","Video","location","controls","big","frameborder","allow","allowfullscreen","autoPlay","loop","type","Carousel","content","align","useState","currentSlideIndex","setCurrentSlideIndex","contentArray","map","contentItem","slideType","onClick","length","slideDescription","layout","require","App","currentScrollIndex","setCurrentScrollIndex","getContentItemElement","contentType","source","split","word","startsWith","wordParsed","join","to","spy","smooth","duration","sections","section","index","name","bp","onSetActive","parseInt","hashSpy","activeClass","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e6aaf1.chunk.js","sourcesContent":["import React from 'react';\nimport './Image.css';\n\nconst Image = ({src}) => {\n    return (\n        <img className={\"image\"} src={src}/>\n    );\n};\n\nexport default Image;\n","import React from 'react';\nimport \"./Video.css\";\n\nconst Video = ({src, controls, location, big}) => {\n    return (\n        <>\n            {location === \"external\" ?\n                <iframe src={src} className={\"iframe-video\"} frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe> :\n                <video className={`video ${big?'big':''}`} autoPlay loop>\n                    <source src={location === \"external\" ? src : `videos/${src}`} type=\"video/mp4\"/>\n                </video>\n            }\n        </>\n    )\n        ;\n};\n\nexport default Video;\n","import React, {useState} from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel as ResponsiveCarousel} from 'react-responsive-carousel';\nimport \"./Carousel.css\";\nimport Image from \"./Image\";\nimport Video from \"./Video\";\n\nconst Carousel = ({content, align}) => {\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\n\n    const renderContent = () => {\n        return content.map(contentItem => {\n            if (contentItem.slideType === \"image\") return <Image src={`images/${contentItem.content}`}/>;\n            if (contentItem.slideType === \"video\") return <Video controls={true} location={contentItem.location} src={`${contentItem.content}`}/>\n            ;\n        });\n    };\n    let contentArray=renderContent();\n\n    const increaseSlideIndex=()=>{\n        if(currentSlideIndex===content.length-1){\n            setCurrentSlideIndex(0);\n        }else{\n            setCurrentSlideIndex(currentSlideIndex+1);\n        }\n    };\n    return (\n        <div className={\"carousel\"}>\n\n            <div className={\"carousel__slider\"}>\n                {contentArray[currentSlideIndex]}\n                <button className={\"carousel__button\"} onClick={increaseSlideIndex}></button>\n            </div>\n\n            <div className={`carousel__info carousel__info--${align}`}>\n                <div className={\"carousel-info__count\"}>{currentSlideIndex + 1}/{content.length}</div>\n                <div>{content[currentSlideIndex].slideDescription}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Carousel;\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport \"blueprint-css/dist/blueprint.min.css\";\nimport Carousel from \"./components/Carousel\";\nimport {Link, Element, Events, animateScroll} from 'react-scroll';\nimport Image from \"./components/Image\";\nimport Video from \"./components/Video\";\nimport ReactMarkdown from 'react-markdown';\n\n\n\nconst layout = require(\"./layout.json\");\n\nfunction App() {\n    let [currentScrollIndex, setCurrentScrollIndex] = useState(0);\n\n    const tableOfContentParser=toc=>{\n     let tocArray=toc.split(\" \");\n     return tocArray.map(word=>{\n         if(word.startsWith(\"#\")){\n             let wordParsed =word.split(\"-\").join(\" \");\n             return <i>{wordParsed} </i>;\n         }\n         if(word===\"\\n\"){\n             return <br/>;\n         }\n         return word+\" \";\n     });\n    };\n\n    const getContentItemElement = ({contentType, content, location=\"internal\"}, align) => {\n        switch (contentType) {\n            case \"text\":\n                return <div className={\"text\"}><ReactMarkdown source={content} /></div>;\n            case \"toc\":\n                return <div className={\"text centered\"}>{tableOfContentParser(content)}</div>;\n            case \"carousel\":\n                return <Carousel content={content} align={align}/>;\n            case \"image\":\n                return <Image src={content}></Image>;\n            case \"video\":\n                return <Video big={true} location={location} src={content}></Video>;\n        }\n    };\n\n    const renderLayout = () => {\n        return layout.sections.map((section, index) => {\n            if (section.length === 2) {\n                return <div name={`section-${index}`} bp={\"grid\"} className={\"section\"}>\n                    <div className={\"center\"} bp={\"6@md 12@sm\"}>{getContentItemElement(section[0], \"left\")}</div>\n                    <div className={\"center\"} bp={\"6@md 12@sm\"}>{getContentItemElement(section[1], \"right\")}</div>\n                    <Link className=\"hidden\"\n                          onSetActive={section => setCurrentScrollIndex(parseInt(section.split(\"-\")[1]))}\n                          to={`section-${index}`} spy={true} hashSpy={true}/>\n                </div>;\n            } else {\n                return <div name={`section-${index}`} bp={\"grid\"} className={\"section\"}>\n                    <div className={\"center\"} bp={\"12\"}>{getContentItemElement(section[0], \"center\")}</div>\n                    <Link className=\"hidden\"\n                          onSetActive={section => setCurrentScrollIndex(parseInt(section.split(\"-\")[1]))}\n                          to={`section-${index}`} spy={true} hashSpy={true}/>\n                </div>;\n            }\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <div className={\"logo\"}> <Link  to={`section-0`}\n                                           spy={true} smooth={true}\n                                           duration={800} onClick={() => setCurrentScrollIndex(0)}>\n                THE ACCURATE INACCURATE\n            </Link></div>\n\n            {renderLayout()}\n            <div className={\"navigation\"}>\n                {currentScrollIndex === 0 ? <div></div> :\n                    <Link activeClass=\"active\" class={\"navigation__button\"} to={`section-${currentScrollIndex - 1}`}\n                          spy={true} smooth={true}\n                          duration={800} onClick={() => setCurrentScrollIndex(currentScrollIndex - 1)}>\n                        Previous\n                    </Link>}\n                {currentScrollIndex === layout.sections.length - 1 ? <div></div> :\n                    <Link activeClass=\"active\" class={\"navigation__button\"} to={`section-${currentScrollIndex + 1}`}\n                          spy={true} smooth={true}\n                          duration={800} onClick={() => setCurrentScrollIndex(currentScrollIndex + 1)}>\n                        Next\n                    </Link>}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}